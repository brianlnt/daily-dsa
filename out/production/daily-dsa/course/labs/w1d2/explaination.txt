Question 1:

Algorithm 1: using three loop

FindThirdLargest(A)
    firstMax <- a[0]                                                            2
    secondMax <- a[0]                                                           2
    thirdMax <- a[0]                                                            2
    firstIndex <- 0                                                             1
    secondIndex <- 0                                                            1

    for i <- 0 to n - 1 do                                                      2+n
        if A[i] > firstMax then                                                 2(n-1)
            firstMax = A[i]                                                     2(n-1)
            firstIndex = i                                                      n - 1
        i++                                                                     2(n-1)
    for i <- 0 to n - 1 do                                                      2+n
        if A[i] > secondMax and i != firstIndex then                            3(n-1)
            secondMax = A[i]                                                    2(n-1)
            secondIndex = i                                                     n - 1
        i++                                                                     2(n-1)
    for i <- 0 to n - 1 do                                                      2+n
        if A[i] > thirdMax and i != firstIndex and i != secondIndex then        4(n-1)
            thirdMax = A[i]                                                     2(n-1)
        i++                                                                     2(n-1)

    return thirdMax                                                             1
                                                                         total: 28n - 9 => O(n)

Algorithm 2: Using one loop

FindThirdLargest(A)
    max <- A[0]                                  2
    preMax <- A[0]                               2
    prePreMax <- A[0]                            2

    for i <- 0 to n - 1 do                       2+n
        if A[i] > max then                       2(n-1)
            prePreMax <- preMax                  n-1
            preMax <- max                        n-1
            max <- A[i]                          2(n-1)
        else if A[i] > preMax then               2(n-1)
            prePreMax <- preMax                  n-1
            preMax <- A[i]                       2(n-1)
        else if A[i] > prePreMax then            2(n-1)
            prePreMax <- A[i]                    2(n-1)
        i++                                      2(n-1)

    return prePreMax                             1
                                          total: 18n - 9 => O(n)

Algorithm 3: using sorting

FindThirdLargest(A)
    A.sort()              nlog(n)
    return A[-3]          2
                   total: nlog(n) + 2 => O(nlog(n))

=> Algorithm 1 ~ Algorithm 2 > Algorithm 3

Question 2:

O(1): 1,10
0(log(n)): log(log(n)), log(n), ln(n)
O(n): n
O(n^k) (0 < k < 1): n^(1/2), n^(1/3)
O(n^k*log(n)) (0 < k < 1): n^(1/2)log(n), n^(1/3)log(n)
O(nlog(n)): nlog(n)
O(n^k) (k > 1): n^2, n^k, n^n
O(2^n): 2^n, 3^n
O(n!)